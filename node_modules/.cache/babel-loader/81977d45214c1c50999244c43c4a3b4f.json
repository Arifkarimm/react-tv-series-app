{"ast":null,"code":"var _jsxFileName = \"/Users/fazlulkarim/Development/Github-Projects/react-tv-series-app/src/containers/Series/index.js\";\nimport React, { Component } from \"react\";\nimport SeriesList from \"../../components/SeriesList\";\nimport Loader from \"../../components/Loader\";\n\nclass Series extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieList: [],\n      searchTerm: \"\",\n      isDataFetch: false\n    };\n    this.fetchSearcMovieStories = this.fetchSearcMovieStories.bind(this);\n  }\n\n  fetchSearcMovieStories(event) {\n    this.setState({\n      searchTerm: event.target.value,\n      isDataFetch: true\n    });\n    fetch(\"http://api.tvmaze.com/search/shows?q=\".concat(event.target.value)).then(response => response.json()).then(result => this.setState({\n      movieList: result,\n      isDataFetch: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          movieList = _this$state.movieList,\n          searchTerm = _this$state.searchTerm,\n          isDataFetch = _this$state.isDataFetch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: this.fetchSearcMovieStories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), !isDataFetch && movieList.length === 0 && searchTerm.trim() === \"\" && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Please enter the movie list keyword\"), !isDataFetch && movieList.length === 0 && searchTerm.trim() !== \"\" && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"there is no such kind of movie in this list\"), isDataFetch && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), !isDataFetch && React.createElement(SeriesList, {\n      list: movieList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Series;","map":{"version":3,"sources":["/Users/fazlulkarim/Development/Github-Projects/react-tv-series-app/src/containers/Series/index.js"],"names":["React","Component","SeriesList","Loader","Series","constructor","props","state","movieList","searchTerm","isDataFetch","fetchSearcMovieStories","bind","event","setState","target","value","fetch","then","response","json","result","render","length","trim"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAMA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAGAD,EAAAA,sBAAsB,CAACE,KAAD,EAAO;AAC5B,SAAKC,QAAL,CAAc;AAAEL,MAAAA,UAAU,EAAEI,KAAK,CAACE,MAAN,CAAaC,KAA3B;AAAkCN,MAAAA,WAAW,EAAE;AAA/C,KAAd;AACCO,IAAAA,KAAK,gDAAyCJ,KAAK,CAACE,MAAN,CAAaC,KAAtD,EAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAI,KAAKP,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAEa,MAAb;AAAqBX,MAAAA,WAAW,EAAE;AAAlC,KAAd,CAFhB;AAGD;;AAGHY,EAAAA,MAAM,GAAE;AAAA,wBACwC,KAAKf,KAD7C;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,UADZ,eACYA,UADZ;AAAA,UACwBC,WADxB,eACwBA,WADxB;AAEP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,KAAK,EAAED,UAFR;AAGC,MAAA,QAAQ,EAAE,KAAKE,sBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAUE,CAACD,WAAD,IAAgBF,SAAS,CAACe,MAAV,KAAqB,CAArC,IAA0Cd,UAAU,CAACe,IAAX,OAAsB,EAAhE,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAXF,EAcE,CAACd,WAAD,IAAgBF,SAAS,CAACe,MAAV,KAAqB,CAArC,IAA0Cd,UAAU,CAACe,IAAX,OAAsB,EAAhE,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAfF,EAkBEd,WAAW,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBjB,EAoBE,CAACA,WAAD,IAAgB,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBlB,CADD;AA0BA;;AAlD6B;;AAqD/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport SeriesList from \"../../components/SeriesList\";\nimport Loader from \"../../components/Loader\";\n\nclass Series extends Component {\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n      movieList: [],\n      searchTerm: \"\",\n      isDataFetch: false\n    }\n\n    this.fetchSearcMovieStories = this.fetchSearcMovieStories.bind(this);\n  }\n\n\n  \tfetchSearcMovieStories(event){\n  \t\tthis.setState({ searchTerm: event.target.value, isDataFetch: true });\n\t    fetch(`http://api.tvmaze.com/search/shows?q=${event.target.value}`)\n\t    .then(response => response.json())\n\t    .then(result => this.setState({ movieList: result, isDataFetch: false }))\n  \t}\n\n\n\trender(){\n\t\tconst { movieList, searchTerm, isDataFetch } = this.state;\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tvalue={searchTerm} \n\t\t\t\t\t\tonChange={this.fetchSearcMovieStories} \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\n\t\t\t\t{!isDataFetch && movieList.length === 0 && searchTerm.trim() === \"\" && (\n\t\t\t\t\t<p>Please enter the movie list keyword</p>\n\t\t\t\t)}\n\n\t\t\t\t{!isDataFetch && movieList.length === 0 && searchTerm.trim() !== \"\" && (\n\t\t\t\t\t<p>there is no such kind of movie in this list</p>\n\t\t\t\t)}\n\n\t\t\t\t{isDataFetch && <Loader />}\n\n\t\t\t\t{!isDataFetch && <SeriesList list={movieList} /> }\n\n\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Series;"]},"metadata":{},"sourceType":"module"}