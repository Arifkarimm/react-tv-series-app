{"ast":null,"code":"var _jsxFileName = \"/Users/fazlulkarim/Development/Github-Projects/react-tv-series-app/src/containers/SingleSeriesList/index.js\";\nimport React, { Component } from \"react\";\n\nclass SingleSeriesList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      singleMovieItem: null\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    fetch(\"https://api.tvmaze.com/shows/\".concat(id, \"?embed=episodes\")).then(response => response.json()).then(result => console.log(result));\n  }\n\n  render() {\n    const singleMovieItem = this.state.singleMovieItem;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, singleMovieItem !== null && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, singleMovieItem.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Premiered - \", singleMovieItem.premiered), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Rating - \", singleMovieItem.rating.average), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Episodes - \", singleMovieItem._embedded.episodes.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: singleMovieItem.image.medium,\n      alt: \"singleMovieItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SingleSeriesList;","map":{"version":3,"sources":["/Users/fazlulkarim/Development/Github-Projects/react-tv-series-app/src/containers/SingleSeriesList/index.js"],"names":["React","Component","SingleSeriesList","constructor","props","state","singleMovieItem","componentDidMount","id","match","params","fetch","then","response","json","result","console","log","render","name","premiered","rating","average","_embedded","episodes","length","image","medium"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;;AAEA,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAID;;AAEAC,EAAAA,iBAAiB,GAAE;AAAA,UACVC,EADU,GACH,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MADd,CACVF,EADU;AAEjBG,IAAAA,KAAK,wCAAiCH,EAAjC,qBAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFhB;AAGD;;AAEHG,EAAAA,MAAM,GAAE;AAAA,UAECZ,eAFD,GAEqB,KAAKD,KAF1B,CAECC,eAFD;AAGP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,eAAe,KAAK,IAApB,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,eAAe,CAACa,IAApB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBb,eAAe,CAACc,SAAhC,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAad,eAAe,CAACe,MAAhB,CAAuBC,OAApC,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAehB,eAAe,CAACiB,SAAhB,CAA0BC,QAA1B,CAAmCC,MAAlD,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAEnB,eAAe,CAACoB,KAAhB,CAAsBC,MAAhC;AAAwC,MAAA,GAAG,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALD,CAFF,CADD;AAeA;;AAnCuC;;AAuCzC,eAAezB,gBAAf","sourcesContent":["import React,{ Component } from \"react\";\n\nclass SingleSeriesList extends Component {\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n      singleMovieItem: null\n    }\n\n  }\n\n   componentDidMount(){ \n  \t\tconst { id } = this.props.match.params;\n\t    fetch(`https://api.tvmaze.com/shows/${id}?embed=episodes`)\n\t    .then(response => response.json())\n\t    .then(result => console.log(result))\n  \t}\n\n\trender(){\n\t\t\n\t\tconst { singleMovieItem } = this.state;\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{singleMovieItem !== null && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>{singleMovieItem.name}</p>\n\t\t\t\t\t\t<p>Premiered - {singleMovieItem.premiered}</p>\n\t\t\t\t\t\t<p>Rating - {singleMovieItem.rating.average}</p>\n\t\t\t\t\t\t<p>Episodes - {singleMovieItem._embedded.episodes.length}</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img src={singleMovieItem.image.medium} alt=\"singleMovieItem\" />\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default SingleSeriesList;"]},"metadata":{},"sourceType":"module"}